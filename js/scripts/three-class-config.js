//
// base version of this file auto-generated by generate-class-config.js
// date: Wed Aug 31 2016 08:59:45 GMT-0700 (PDT)
//

var Types = require('./prop-types');

module.exports = {
 _defaults: require('./three-class-config-defaults'),

    Three_Legacy: {
        relativePath: './Three.Legacy',
    },
    Three: {
        relativePath: './Three',
    },
    AnimationClip: {
        relativePath: './animation/AnimationClip',
    },
    AnimationMixer: {
        relativePath: './animation/AnimationMixer',
    },
    AnimationObjectGroup: {
        relativePath: './animation/AnimationObjectGroup',
    },
    AnimationUtils: {
        relativePath: './animation/AnimationUtils',
    },
    KeyframeTrack: {
        relativePath: './animation/KeyframeTrack',
    },
    PropertyBinding: {
        relativePath: './animation/PropertyBinding',
    },
    PropertyMixer: {
        relativePath: './animation/PropertyMixer',
    },
    Audio: {
        relativePath: './audio/Audio',
    },
    AudioAnalyser: {
        relativePath: './audio/AudioAnalyser',
    },
    AudioBuffer: {
        relativePath: './audio/AudioBuffer',
    },
    AudioListener: {
        relativePath: './audio/AudioListener',
    },
    PositionalAudio: {
        relativePath: './audio/PositionalAudio',
    },
    Camera: {
        relativePath: './cameras/Camera',
    },
    CubeCamera: {
        relativePath: './cameras/CubeCamera',
    },
    OrthographicCamera: {
        relativePath: './cameras/OrthographicCamera',
    },
    PerspectiveCamera: {
        relativePath: './cameras/PerspectiveCamera',
    },
    StereoCamera: {
        relativePath: './cameras/StereoCamera',
    },
    BufferAttribute: {
        relativePath: './core/BufferAttribute',
    },
    BufferGeometry: {
        relativePath: './core/BufferGeometry',
    },
    Clock: {
        relativePath: './core/Clock',
    },
    DirectGeometry: {
        relativePath: './core/DirectGeometry',
    },
    EventDispatcher: {
        relativePath: './core/EventDispatcher',
    },
    Face3: {
        relativePath: './core/Face3',
    },
    Geometry: {
        relativePath: './core/Geometry',
    },
    InstancedBufferAttribute: {
        relativePath: './core/InstancedBufferAttribute',
    },
    InstancedBufferGeometry: {
        relativePath: './core/InstancedBufferGeometry',
    },
    InstancedInterleavedBuffer: {
        relativePath: './core/InstancedInterleavedBuffer',
    },
    InterleavedBuffer: {
        relativePath: './core/InterleavedBuffer',
    },
    InterleavedBufferAttribute: {
        relativePath: './core/InterleavedBufferAttribute',
    },
    Layers: {
        relativePath: './core/Layers',
    },
    Object3D: {
        relativePath: './core/Object3D',
        properties: {
            uuid: new Types.String(''),
            name: new Types.String(''),
            parent: new Types.ThreeType('this'),
            children: new Types.ThreeTypeArray('this'),
            up: new Types.Vector3(0, 1, 0),
            position: new Types.Vector3(),
            rotation: new Types.Vector3(),
            quaternion: new Types.Vector4(),
            scale: new Types.Vector3(1, 1, 1),
            modelViewMatrix: new Types.Matrix4(),
            normalMatrix: new Types.Matrix3(),
            matrix: new Types.Matrix4(),
            matrixWorld: new Types.Matrix4(),
            matrixAutoUpdate: new Types.Bool(true),
            matrixWorldNeedsUpdate: new Types.Bool(false),
            visible: new Types.Bool(true),
            castShadow: new Types.Bool(false),
            receiveShadow: new Types.Bool(false),
            frustumCulled: new Types.Bool(true),
            renderOrder: new Types.Int(0),
        }
    },
    Raycaster: {
        relativePath: './core/Raycaster',
    },
    Uniform: {
        relativePath: './core/Uniform',
    },
    CurveUtils: {
        relativePath: './extras/CurveUtils',
    },
    SceneUtils: {
        relativePath: './extras/SceneUtils',
    },
    ShapeUtils: {
        relativePath: './extras/ShapeUtils',
    },
    AmbientLight: {
        relativePath: './lights/AmbientLight',
    },
    DirectionalLight: {
        relativePath: './lights/DirectionalLight',
    },
    HemisphereLight: {
        relativePath: './lights/HemisphereLight',
    },
    Light: {
        relativePath: './lights/Light',
    },
    LightShadow: {
        relativePath: './lights/LightShadow',
    },
    PointLight: {
        relativePath: './lights/PointLight',
    },
    SpotLight: {
        relativePath: './lights/SpotLight',
    },
    AnimationLoader: {
        relativePath: './loaders/AnimationLoader',
    },
    BinaryTextureLoader: {
        relativePath: './loaders/BinaryTextureLoader',
    },
    BufferGeometryLoader: {
        relativePath: './loaders/BufferGeometryLoader',
    },
    Cache: {
        relativePath: './loaders/Cache',
    },
    CompressedTextureLoader: {
        relativePath: './loaders/CompressedTextureLoader',
    },
    CubeTextureLoader: {
        relativePath: './loaders/CubeTextureLoader',
    },
    FontLoader: {
        relativePath: './loaders/FontLoader',
    },
    ImageLoader: {
        relativePath: './loaders/ImageLoader',
    },
    JSONLoader: {
        relativePath: './loaders/JSONLoader',
    },
    Loader: {
        relativePath: './loaders/Loader',
    },
    LoadingManager: {
        relativePath: './loaders/LoadingManager',
    },
    MaterialLoader: {
        relativePath: './loaders/MaterialLoader',
    },
    ObjectLoader: {
        relativePath: './loaders/ObjectLoader',
    },
    TextureLoader: {
        relativePath: './loaders/TextureLoader',
    },
    XHRLoader: {
        relativePath: './loaders/XHRLoader',
    },
    LineBasicMaterial: {
        relativePath: './materials/LineBasicMaterial',
    },
    LineDashedMaterial: {
        relativePath: './materials/LineDashedMaterial',
    },
    Material: {
        relativePath: './materials/Material',
        dependencies: [ 'Plane' ],
        properties: {
            id:                  new Types.String(''),
            uuid:                new Types.String(''),
            name:                new Types.String(''),
            opacity:             new Types.Float(1.0),
            transparent:         new Types.Bool(false),
            blending:            new Types.Enum('BlendingMode', 'NormalBlending'),
            blendSrc:            new Types.Enum('BlendFactors', 'SrcAlphaFactor'),
            blendDst:            new Types.Enum('BlendFactors', 'OneMinusSrcAlphaFactor'),
            blendEquation:       new Types.Enum('Equations', 'AddEquation'),
            depthTest:           new Types.Bool(true),
            depthFunc:           new Types.Enum('DepthMode', 'LessEqualDepth'),
            depthWrite:          new Types.Bool(true),
            polygonOffset:       new Types.Bool(false),
            polygonOffsetFactor: new Types.Float(0),
            polygonOffsetUnits:  new Types.Float(0),
            alphaTest:           new Types.Float(0.0),
            clippingPlanes:      new Types.ThreeTypeArray('Plane'),
            clipShadows:         new Types.Bool(false),
            overdraw:            new Types.Float(0),
            visible:             new Types.Bool(true),
            side:                new Types.Enum('Side', 'FrontSide'),
        }
    },
    MeshBasicMaterial: {
        relativePath: './materials/MeshBasicMaterial',
        superClass: 'Material',
        dependencies: [ 'Texture' ],
        properties: {
            color:              new Types.Color('0xffffff'),
            map:                new Types.ThreeType('Texture'),
            aoMap:              new Types.ThreeType('Texture'),
            aoMapIntensity:     new Types.Float(1),
            specularMap:        new Types.ThreeType('Texture'),
            alphaMap:           new Types.ThreeType('Texture'),
            envMap:             new Types.ThreeType('Texture'),
            combine:            new Types.Enum('Operations', 'MultiplyOperation'),
            reflectivity:       new Types.Float(1),
            refractionRatio:    new Types.Float(0.98),
            fog:                new Types.Bool(true),
            shading:            new Types.Enum('Shading', 'SmoothShading'),
            wireframe:          new Types.Bool(false),
            wireframeLinewidth: new Types.Float(1),
            wireframeLinecap:   new Types.String('round'), // TODO: enum?
            wireframeLinejoin:  new Types.String('round'),
            vertexColors:       new Types.Enum('Colors', 'NoColors'),
            skinning:           new Types.Bool(false),
            morphTargets:       new Types.Bool(false),
        },
    },
    MeshDepthMaterial: {
        relativePath: './materials/MeshDepthMaterial',
        superClass: 'Material',
    },
    MeshLambertMaterial: {
        relativePath: './materials/MeshLambertMaterial',
        superClass: 'Material',
    },
    MeshNormalMaterial: {
        relativePath: './materials/MeshNormalMaterial',
        superClass: 'Material',
    },
    MeshPhongMaterial: {
        relativePath: './materials/MeshPhongMaterial',
        superClass: 'Material',
    },
    MeshStandardMaterial: {
        relativePath: './materials/MeshStandardMaterial',
        superClass: 'Material',
        dependencies: [ 'Texture' ],
        properties: {
            color:              new Types.Color('0xffffff'),
            roughness:          new Types.Float(0.5),
            metalness:          new Types.Float(0.5),
            map:                new Types.ThreeType('Texture'),
            lightMap:           new Types.ThreeType('Texture'),
            lightMapIntensity:  new Types.Float(1.0),
            aoMap:              new Types.ThreeType('Texture'),
            aoMapIntensity:     new Types.Float(1),
            emissive:           new Types.Color('0x000000'),
            emissiveMap:        new Types.ThreeType('Texture'),
            emissiveIntensity:  new Types.Float(1.0),
            bumpMap:            new Types.ThreeType('Texture'),
            bumpMapScale:       new Types.Float(1.0),
            normalMap:          new Types.ThreeType('Texture'),
            // TODO:
            // normalMapScale:     new Types.Array([ 1, 1 ]),
            displacementMap:    new Types.ThreeType('Texture'),
            displacementScale:  new Types.Float(1.0),
            displacementBias:   new Types.Float(0.0),
            roughnessMap:       new Types.ThreeType('Texture'),
            metalnessMap:       new Types.ThreeType('Texture'),
            alphaMap:           new Types.ThreeType('Texture'),
            envMap:             new Types.ThreeType('Texture'),
            envMapIntensity:    new Types.Float(1.0),
            refractionRatio:    new Types.Float(0.98),
            fog:                new Types.Bool(true),
            shading:            new Types.Enum('Shading', 'SmoothShading'),
            wireframe:          new Types.Bool(false),
            wireframeLinewidth: new Types.Float(1),
            wireframeLinecap:   new Types.String('round'), // TODO: enum?
            wireframeLinejoin:  new Types.String('round'),
            vertexColors:       new Types.Enum('Colors', 'NoColors'),
            skinning:           new Types.Bool(false),
            morphTargets:       new Types.Bool(false),
            morphNormals:       new Types.Bool(false),
        }
    },
    MultiMaterial: {
        relativePath: './materials/MultiMaterial',
        superClass: 'Material',
    },
    PointsMaterial: {
        relativePath: './materials/PointsMaterial',
        superClass: 'Material',
    },
    RawShaderMaterial: {
        relativePath: './materials/RawShaderMaterial',
        superClass: 'Material',
    },
    ShaderMaterial: {
        relativePath: './materials/ShaderMaterial',
        superClass: 'Material',
    },
    SpriteMaterial: {
        relativePath: './materials/SpriteMaterial',
        superClass: 'Material',
    },
    Box2: {
        relativePath: './math/Box2',
    },
    Box3: {
        relativePath: './math/Box3',
    },
    Color: {
        relativePath: './math/Color',
    },
    Euler: {
        relativePath: './math/Euler',
    },
    Frustum: {
        relativePath: './math/Frustum',
    },
    Interpolant: {
        relativePath: './math/Interpolant',
    },
    Line3: {
        relativePath: './math/Line3',
    },
    Math: {
        relativePath: './math/Math',
    },
    Matrix3: {
        relativePath: './math/Matrix3',
    },
    Matrix4: {
        relativePath: './math/Matrix4',
    },
    Plane: {
        relativePath: './math/Plane',
    },
    Quaternion: {
        relativePath: './math/Quaternion',
    },
    Ray: {
        relativePath: './math/Ray',
    },
    Sphere: {
        relativePath: './math/Sphere',
    },
    Spherical: {
        relativePath: './math/Spherical',
    },
    Spline: {
        relativePath: './math/Spline',
    },
    Triangle: {
        relativePath: './math/Triangle',
    },
    Vector2: {
        relativePath: './math/Vector2',
    },
    Vector3: {
        relativePath: './math/Vector3',
    },
    Vector4: {
        relativePath: './math/Vector4',
    },
    Bone: {
        relativePath: './objects/Bone',
    },
    Group: {
        relativePath: './objects/Group',
    },
    LOD: {
        relativePath: './objects/LOD',
    },
    LensFlare: {
        relativePath: './objects/LensFlare',
    },
    Line: {
        relativePath: './objects/Line',
    },
    LineSegments: {
        relativePath: './objects/LineSegments',
    },
    Mesh: {
        relativePath: './objects/Mesh',
        superClass: 'Object3D',
        dependencies: [
            'Material',
            'Geometry',
        ],
        properties: {
            material: new Types.ThreeType('Material'),
            geometry: new Types.ThreeType('Geometry'),
        }
    },
    Points: {
        relativePath: './objects/Points',
    },
    Skeleton: {
        relativePath: './objects/Skeleton',
    },
    SkinnedMesh: {
        relativePath: './objects/SkinnedMesh',
    },
    Sprite: {
        relativePath: './objects/Sprite',
    },
    WebGLRenderTarget: {
        relativePath: './renderers/WebGLRenderTarget',
    },
    WebGLRenderTargetCube: {
        relativePath: './renderers/WebGLRenderTargetCube',
    },
    WebGLRenderer: {
        relativePath: './renderers/WebGLRenderer',
    },
    Fog: {
        relativePath: './scenes/Fog',
    },
    FogExp2: {
        relativePath: './scenes/FogExp2',
    },
    Scene: {
        relativePath: './scenes/Scene',
    },
    CanvasTexture: {
        relativePath: './textures/CanvasTexture',
    },
    CompressedTexture: {
        relativePath: './textures/CompressedTexture',
    },
    CubeTexture: {
        relativePath: './textures/CubeTexture',
    },
    DataTexture: {
        relativePath: './textures/DataTexture',
    },
    Texture: {
        relativePath: './textures/Texture',
    },
    VideoTexture: {
        relativePath: './textures/VideoTexture',
    },
    BooleanKeyframeTrack: {
        relativePath: './animation/tracks/BooleanKeyframeTrack',
    },
    ColorKeyframeTrack: {
        relativePath: './animation/tracks/ColorKeyframeTrack',
    },
    NumberKeyframeTrack: {
        relativePath: './animation/tracks/NumberKeyframeTrack',
    },
    QuaternionKeyframeTrack: {
        relativePath: './animation/tracks/QuaternionKeyframeTrack',
    },
    StringKeyframeTrack: {
        relativePath: './animation/tracks/StringKeyframeTrack',
    },
    VectorKeyframeTrack: {
        relativePath: './animation/tracks/VectorKeyframeTrack',
    },
    Curve: {
        relativePath: './extras/core/Curve',
    },
    CurvePath: {
        relativePath: './extras/core/CurvePath',
    },
    Font: {
        relativePath: './extras/core/Font',
    },
    Path: {
        relativePath: './extras/core/Path',
    },
    Shape: {
        relativePath: './extras/core/Shape',
    },
    ArcCurve: {
        relativePath: './extras/curves/ArcCurve',
    },
    CatmullRomCurve3: {
        relativePath: './extras/curves/CatmullRomCurve3',
    },
    ClosedSplineCurve3: {
        relativePath: './extras/curves/ClosedSplineCurve3',
    },
    CubicBezierCurve: {
        relativePath: './extras/curves/CubicBezierCurve',
    },
    CubicBezierCurve3: {
        relativePath: './extras/curves/CubicBezierCurve3',
    },
    EllipseCurve: {
        relativePath: './extras/curves/EllipseCurve',
    },
    LineCurve: {
        relativePath: './extras/curves/LineCurve',
    },
    LineCurve3: {
        relativePath: './extras/curves/LineCurve3',
    },
    QuadraticBezierCurve: {
        relativePath: './extras/curves/QuadraticBezierCurve',
    },
    QuadraticBezierCurve3: {
        relativePath: './extras/curves/QuadraticBezierCurve3',
    },
    SplineCurve: {
        relativePath: './extras/curves/SplineCurve',
    },
    SplineCurve3: {
        relativePath: './extras/curves/SplineCurve3',
    },
    BoxBufferGeometry: {
        relativePath: './extras/geometries/BoxBufferGeometry',
        superClass: 'BufferGeometry',
    },
    BoxGeometry: {
        relativePath: './extras/geometries/BoxGeometry',
        superClass: 'Geometry',
    },
    CircleBufferGeometry: {
        relativePath: './extras/geometries/CircleBufferGeometry',
        superClass: 'BufferGeometry',
    },
    CircleGeometry: {
        relativePath: './extras/geometries/CircleGeometry',
        superClass: 'Geometry',
    },
    CylinderBufferGeometry: {
        relativePath: './extras/geometries/CylinderBufferGeometry',
        superClass: 'BufferGeometry',
    },
    CylinderGeometry: {
        relativePath: './extras/geometries/CylinderGeometry',
        superClass: 'Geometry',
    },
    DodecahedronGeometry: {
        relativePath: './extras/geometries/DodecahedronGeometry',
        superClass: 'Geometry',
    },
    EdgesGeometry: {
        relativePath: './extras/geometries/EdgesGeometry',
        superClass: 'Geometry',
    },
    ExtrudeGeometry: {
        relativePath: './extras/geometries/ExtrudeGeometry',
        superClass: 'Geometry',
    },
    IcosahedronGeometry: {
        relativePath: './extras/geometries/IcosahedronGeometry',
        superClass: 'Geometry',
    },
    LatheBufferGeometry: {
        relativePath: './extras/geometries/LatheBufferGeometry',
        superClass: 'BufferGeometry',
    },
    LatheGeometry: {
        relativePath: './extras/geometries/LatheGeometry',
        superClass: 'Geometry',
    },
    OctahedronGeometry: {
        relativePath: './extras/geometries/OctahedronGeometry',
        superClass: 'Geometry',
    },
    ParametricGeometry: {
        relativePath: './extras/geometries/ParametricGeometry',
        superClass: 'Geometry',
    },
    PlaneBufferGeometry: {
        relativePath: './extras/geometries/PlaneBufferGeometry',
        superClass: 'BufferGeometry',
    },
    PlaneGeometry: {
        relativePath: './extras/geometries/PlaneGeometry',
        superClass: 'Geometry',
    },
    PolyhedronGeometry: {
        relativePath: './extras/geometries/PolyhedronGeometry',
        superClass: 'Geometry',
    },
    RingBufferGeometry: {
        relativePath: './extras/geometries/RingBufferGeometry',
        superClass: 'BufferGeometry',
    },
    RingGeometry: {
        relativePath: './extras/geometries/RingGeometry',
        superClass: 'Geometry',
    },
    ShapeGeometry: {
        relativePath: './extras/geometries/ShapeGeometry',
        superClass: 'Geometry',
    },
    SphereBufferGeometry: {
        relativePath: './extras/geometries/SphereBufferGeometry',
        superClass: 'BufferGeometry',
    },
    SphereGeometry: {
        relativePath: './extras/geometries/SphereGeometry',
        superClass: 'Geometry',
    },
    TetrahedronGeometry: {
        relativePath: './extras/geometries/TetrahedronGeometry',
        superClass: 'Geometry',
    },
    TextGeometry: {
        relativePath: './extras/geometries/TextGeometry',
        superClass: 'Geometry',
    },
    TorusBufferGeometry: {
        relativePath: './extras/geometries/TorusBufferGeometry',
        superClass: 'BufferGeometry',
        properties: {
            radius: new Types.Float(100),
            tube: new Types.Float(40),
            radialSegments: new Types.Int(8),
            tubularSegments: new Types.Int(6),
            arc: new Types.Float(Math.PI * 2.0),
        }
    },
    TorusGeometry: {
        relativePath: './extras/geometries/TorusGeometry',
        superClass: 'Geometry',
        properties: {
            radius: new Types.Float(100),
            tube: new Types.Float(40),
            radialSegments: new Types.Int(8),
            tubularSegments: new Types.Int(6),
            arc: new Types.Float(Math.PI * 2.0),
        }    
    },
    TorusKnotBufferGeometry: {
        relativePath: './extras/geometries/TorusKnotBufferGeometry',
        superClass: 'BufferGeometry',
    },
    TorusKnotGeometry: {
        relativePath: './extras/geometries/TorusKnotGeometry',
        superClass: 'Geometry',
    },
    TubeGeometry: {
        relativePath: './extras/geometries/TubeGeometry',
        superClass: 'Geometry',
    },
    WireframeGeometry: {
        relativePath: './extras/geometries/WireframeGeometry',
        superClass: 'Geometry',
    },
    ArrowHelper: {
        relativePath: './extras/helpers/ArrowHelper',
    },
    AxisHelper: {
        relativePath: './extras/helpers/AxisHelper',
    },
    BoundingBoxHelper: {
        relativePath: './extras/helpers/BoundingBoxHelper',
    },
    BoxHelper: {
        relativePath: './extras/helpers/BoxHelper',
    },
    CameraHelper: {
        relativePath: './extras/helpers/CameraHelper',
    },
    DirectionalLightHelper: {
        relativePath: './extras/helpers/DirectionalLightHelper',
    },
    EdgesHelper: {
        relativePath: './extras/helpers/EdgesHelper',
    },
    FaceNormalsHelper: {
        relativePath: './extras/helpers/FaceNormalsHelper',
    },
    GridHelper: {
        relativePath: './extras/helpers/GridHelper',
    },
    HemisphereLightHelper: {
        relativePath: './extras/helpers/HemisphereLightHelper',
    },
    PointLightHelper: {
        relativePath: './extras/helpers/PointLightHelper',
    },
    SkeletonHelper: {
        relativePath: './extras/helpers/SkeletonHelper',
    },
    SpotLightHelper: {
        relativePath: './extras/helpers/SpotLightHelper',
    },
    VertexNormalsHelper: {
        relativePath: './extras/helpers/VertexNormalsHelper',
    },
    WireframeHelper: {
        relativePath: './extras/helpers/WireframeHelper',
    },
    ImmediateRenderObject: {
        relativePath: './extras/objects/ImmediateRenderObject',
    },
    MorphBlendMesh: {
        relativePath: './extras/objects/MorphBlendMesh',
    },
    CubicInterpolant: {
        relativePath: './math/interpolants/CubicInterpolant',
    },
    DiscreteInterpolant: {
        relativePath: './math/interpolants/DiscreteInterpolant',
    },
    LinearInterpolant: {
        relativePath: './math/interpolants/LinearInterpolant',
    },
    QuaternionLinearInterpolant: {
        relativePath: './math/interpolants/QuaternionLinearInterpolant',
    },
    ShaderChunk: {
        relativePath: './renderers/shaders/ShaderChunk',
    },
    ShaderLib: {
        relativePath: './renderers/shaders/ShaderLib',
    },
    UniformsLib: {
        relativePath: './renderers/shaders/UniformsLib',
    },
    UniformsUtils: {
        relativePath: './renderers/shaders/UniformsUtils',
    },
    WebGLBufferRenderer: {
        relativePath: './renderers/webgl/WebGLBufferRenderer',
    },
    WebGLCapabilities: {
        relativePath: './renderers/webgl/WebGLCapabilities',
    },
    WebGLExtensions: {
        relativePath: './renderers/webgl/WebGLExtensions',
    },
    WebGLGeometries: {
        relativePath: './renderers/webgl/WebGLGeometries',
    },
    WebGLIndexedBufferRenderer: {
        relativePath: './renderers/webgl/WebGLIndexedBufferRenderer',
    },
    WebGLLights: {
        relativePath: './renderers/webgl/WebGLLights',
    },
    WebGLObjects: {
        relativePath: './renderers/webgl/WebGLObjects',
    },
    WebGLProgram: {
        relativePath: './renderers/webgl/WebGLProgram',
    },
    WebGLPrograms: {
        relativePath: './renderers/webgl/WebGLPrograms',
    },
    WebGLProperties: {
        relativePath: './renderers/webgl/WebGLProperties',
    },
    WebGLShader: {
        relativePath: './renderers/webgl/WebGLShader',
    },
    WebGLShadowMap: {
        relativePath: './renderers/webgl/WebGLShadowMap',
    },
    WebGLState: {
        relativePath: './renderers/webgl/WebGLState',
    },
    LensFlarePlugin: {
        relativePath: './renderers/webgl/plugins/LensFlarePlugin',
    },
    SpritePlugin: {
        relativePath: './renderers/webgl/plugins/SpritePlugin',
    },
};
