from ipywidgets import Widget, DOMWidget, widget_serialization, Color
from traitlets import Unicode, Int, CInt, Instance, This, Enum, Tuple, List, Dict, Float, CFloat, Bool, Union, Any

from ..enums import *
from ..traits import *

from .._base.Three import ThreeWidget

from ..math.Ray_autogen import Ray

class Raycaster(ThreeWidget):
    """Raycaster
    
    Autogenerated by generate-wrappers.js 
    Date: Fri Oct 21 2016 15:47:51 GMT-0700 (PDT) 
    See http://threejs.org/docs/#Reference/Core/Raycaster 
    """

    def __init__(self, origin=[0,0,0], direction=[0,0,0], near=0, far=1000000, **kwargs):
        kwargs['origin'] = origin
        kwargs['direction'] = direction
        kwargs['near'] = near
        kwargs['far'] = far
        super(ThreeWidget, self).__init__(**kwargs)

    _view_name = Unicode('RaycasterView').tag(sync=True)
    _model_name = Unicode('RaycasterModel').tag(sync=True)

    origin = Vector3(default=[0,0,0]).tag(sync=True)
    direction = Vector3(default=[0,0,0]).tag(sync=True)
    near = CFloat(0).tag(sync=True)
    far = CFloat(1000000).tag(sync=True)
    ray = Instance(Ray, allow_none=True).tag(sync=True, **widget_serialization)
    linePrecision = CFloat(1).tag(sync=True)

